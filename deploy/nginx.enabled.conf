server {
    listen 80;
    listen [::]:80;

    server_name space.voce.chat;

    if ($host = space.voce.chat) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    return 404; # managed by Certbot
}

server {
    listen [::]:443 ssl ipv6only=on;
    listen 443 ssl;
    
    server_name space.voce.chat;

    # 生产环境 (3000)
    location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        proxy_pass http://127.0.0.1:3000;
    }

    # 测试环境 (3001)
    location /dev {
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        proxy_pass http://127.0.0.1:3001;
        proxy_redirect off;
        proxy_buffering off;
    }

    # Next.js 静态资源处理
    location ~ ^/dev/_next/(.*)$ {
        # 直接转发到对应的路径，无需 /dev 前缀
        proxy_pass http://127.0.0.1:3001/dev/_next/$1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # 添加缓存控制
        expires 30d;
        add_header Cache-Control "public, no-transform";
        access_log off;
    }


    # WebRTC 相关代理
    location /rtc {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_pass http://127.0.0.1:7880;
    }

    # SSL 证书
    ssl_certificate /etc/letsencrypt/live/space.voce.chat/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/space.voce.chat/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}
