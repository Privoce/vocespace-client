# docker-compose build --build-arg BUILDPLATFORM=linux/arm64
# docker-compose build --build-arg BUILDPLATFORM=linux/amd64
services:
  vocespace:
    container_name: vocespace
    image: privoce/vocespace:latest
    build:
      context: .
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY:-devkey}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET:-secret}
      - LIVEKIT_URL=${LIVEKIT_URL:-ws://localhost:7880}
      - NEXT_PUBLIC_BASE_PATH=${NEXT_PUBLIC_BASE_PATH:-}
      - PORT=${PORT:-3000}
      - TURN_CREDENTIAL=${TURN_CREDENTIAL:-}
      - TURN_URL=${TURN_URL:-}
      - TURN_USERNAME=${TURN_USERNAME:-}
      - NEXT_PUBLIC_RESOLUTION=${NEXT_PUBLIC_RESOLUTION:-1080p}
      - NEXT_PUBLIC_MAXBITRATE=${NEXT_PUBLIC_MAXBITRATE:-12000}
      - NEXT_PUBLIC_MAXFRAMERATE=${NEXT_PUBLIC_MAXFRAMERATE:-30}
      - NEXT_PUBLIC_PRIORITY=${NEXT_PUBLIC_PRIORITY:-medium}
      - REDIS_ENABLED=${REDIS_ENABLED:-true}
      - REDIS_HOST=${REDIS_HOST:-redis} # 指向docker的redis服务
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-vocespace}
      - REDIS_DB=${REDIS_DB:-0}
    volumes:
      - npm-cache:/app/.npm-cache
      - uploads:/app/uploads
    depends_on:
      - livekit
      - redis
    networks:
      - vocespace-network
  redis:
    image: redis:7-alpine
    container_name: vocespace-redis
    restart: unless-stopped
    command: redis-server --requirepass vocespace
    volumes:
      - redis-data:/data
    networks:
      - vocespace-network

volumes:
  npm-cache:
  uploads:

networks:
  vocespace-network:
    driver: bridge